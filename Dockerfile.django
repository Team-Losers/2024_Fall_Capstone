# Base image
FROM python:3.11

# Set the working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    python3-dev \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY ./server/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the Django project
COPY ./server .

# Copy settings.example.py to settings.py if needed
RUN if [ ! -f server/settings.py ]; then cp server/settings.example.py server/settings.py; fi

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=server.settings
ENV DATABASE_HOST=postgres_db
ENV DATABASE_PORT=5432

# Make sure manage.py is executable
RUN chmod +x manage.py

# Expose port
EXPOSE 8000

# Wait for database and run migrations
CMD ["sh", "-c", "while ! nc -z postgres_db 5432; do sleep 1; done; python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]

# NLTK 데이터 다운로드
RUN python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords'); nltk.download('averaged_perceptron_tagger'); nltk.download('wordnet'); nltk.download('punkt_tab'); nltk.download('averaged_perceptron_tagger_eng')"

# spaCy 영어 모델 다운로드
RUN python -m spacy download en_core_web_sm

RUN pip install --no-cache-dir --upgrade transformers tiktoken

RUN python -c "from transformers import AutoTokenizer, AutoModelForSequenceClassification; \
    tokenizer = AutoTokenizer.from_pretrained('yangheng/deberta-v3-large-absa-v1.1'); \
    model = AutoModelForSequenceClassification.from_pretrained('yangheng/deberta-v3-large-absa-v1.1')"

RUN python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('all-MiniLM-L6-v2')"
